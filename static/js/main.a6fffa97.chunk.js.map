{"version":3,"sources":["components/NavTabs.js","assets/header/fam-pic.jpg","components/pages/About.js","components/pages/Contact.js","utils/helpers.js","assets/projects/LOTRSSGame.JPG","assets/projects/RecipeScreenshot_50.jpg","assets/projects/workday.JPG","assets/projects/runbuddy2.JPG","assets/projects/tech-blogger.JPG","assets/projects/Team-Keeper-SS.jpg","assets/projects/Weather-Dashboard.JPG","assets/projects/Note-Taker.JPG","assets/projects/holidaychaosSS.JPG","components/pages/Portfolio.js","assets/resume/MHResume.docx","components/pages/Resume.js","components/PortfolioContainer.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","props","className","map","tab","href","toLowerCase","onClick","handlePageChange","currentPage","About","id","src","famImage","alt","ContactForm","useState","name","email","message","formState","setFormState","formSparkUrl","errorMessage","setErrorMessage","successMessage","setSuccessMessage","verifyForm","e","target","isValid","test","String","validateEmail","value","validateName","validateMessage","onSubmit","preventDefault","payload","axios","post","error","alert","class","for","type","onBlur","placeholder","defaultValue","htmlFor","rows","Portfolio","holidayImage","lotrImage","recImage","workdayImage","runbuddyImage","techBloggerImage","teamkeeperImage","weatherdashboardImage","notetakerImage","Resume","mhResume","download","PortfolioCont","Contact","renderPage","Footer","App","PortfolioContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a6fffa97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Props are passed through our functional component.\r\nfunction NavTabs(props) {\r\n  const tabs = [\"About\", \"Portfolio\", \"Contact\", \"Resume\"];\r\n  return (\r\n    <ul className=\"nav nav-pills nav-fill\">\r\n      {tabs.map((tab) => (\r\n        //make sure you have the key name here!!!\r\n        <li className=\"nav-item\" key={tab}>\r\n          <a\r\n            href={\"#\" + tab.toLowerCase()}\r\n            // Whenever a tab is clicked on,\r\n            // the current page is set through the handlePageChange props.\r\n            onClick={() => props.handlePageChange(tab)}\r\n            className={\r\n              props.currentPage === tab\r\n                ? \"nav-link active light-txt nv-lnk-txt\"\r\n                : \"nav-link light-txt nv-lnk-txt\"\r\n            }\r\n          >\r\n            {tab}\r\n          </a>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavTabs;\r\n","export default __webpack_public_path__ + \"static/media/fam-pic.9e7516f9.jpg\";","import React from \"react\";\r\nimport famImage from \"../../assets/header/fam-pic.jpg\";\r\n\r\nfunction About() {\r\n  return (\r\n    <section className=\"my-5 background-img\">\r\n      <div className=\"container\">\r\n        <h1 id=\"about\">Who am I?</h1>\r\n        <div className=\"row justify-content-center\">\r\n          <a href=\"https://github.com/mjh1985codeman\">\r\n            <img\r\n              className=\"img-fluid\"\r\n              src={famImage}\r\n              alt=\"Michael Hodges with his family at the beach\"\r\n            />\r\n          </a>\r\n          <p className=\"m-4 about-txt\">\r\n            Hey there! Thanks for checking out my portfolio. My name is Michael\r\n            Hodges; here are a few things about me. I am a Husband, Dad, Novice\r\n            Developer and Working Professional. I have 10 Years of payment\r\n            industry experience which includes client services, management,\r\n            reconciliation, POS support and navigating 3rd party integration.\r\n            Currently working my way through a coding boot camp to break into\r\n            the development community.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  validateEmail,\r\n  validateName,\r\n  validateMessage,\r\n} from \"../../utils/helpers\";\r\nimport axios from \"axios\";\r\n\r\nfunction ContactForm() {\r\n  //the Hook that'll manage the form data\r\n  //A feature of this Hook is the ability to initialize the values of the state. In this case,\r\n  // we want to clear the input fields on the component loading. Thus, we'll set the initial state to empty strings, to get the following expression:\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  //form Id from formspark: https://dashboard.formspark.io/\r\n  const formId = \"hBjgobgE\";\r\n  const formSparkUrl = `https://submit-form.com/${formId}`;\r\n\r\n  const { name, email, message } = formState;\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  function verifyForm(e) {\r\n    //Email Validation\r\n    if (e.target.name === \"email\") {\r\n      const isValid = validateEmail(e.target.value);\r\n      // isValid conditional statement\r\n      if (!isValid) {\r\n        setErrorMessage(\"Your email is invalid.\");\r\n      } else {\r\n        if (!e.target.value) {\r\n          setErrorMessage(`${e.target.name} is required.`);\r\n        } else {\r\n          setErrorMessage(\"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    //Name Validation\r\n    if (e.target.name === \"name\") {\r\n      const isValid = validateName(e.target.value);\r\n      // isValid conditional statement\r\n      if (!isValid) {\r\n        setErrorMessage(\"Your name is required.\");\r\n      } else {\r\n        if (!e.target.value) {\r\n          setErrorMessage(`${e.target.name} is required.`);\r\n        } else {\r\n          setErrorMessage(\"\");\r\n        }\r\n      }\r\n    }\r\n\r\n    //Message Validation\r\n    if (e.target.name === \"message\") {\r\n      const isValid = validateMessage(e.target.value);\r\n      // isValid conditional statement\r\n      if (!isValid) {\r\n        setErrorMessage(\"Your message is required.\");\r\n      }\r\n    }\r\n\r\n    //we're using the setFormState function to update the formState value for the name property.\r\n    //We assign the value taken from the input field in the UI with e.target.value and assign this value to the\r\n    //property formState.name. We use the spread operator, ...formState, so we can retain the other key-value pairs in this object. Without the spread operator,\r\n    //the formState object would be overwritten to only contain the name: value key pair.\r\n    if (!errorMessage) {\r\n      setFormState({ ...formState, [e.target.name]: e.target.value });\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const payload = formState;\r\n    if (!errorMessage) {\r\n      try {\r\n        axios.post(formSparkUrl, payload);\r\n      } catch (error) {\r\n        alert(\"Uh Oh looks like there was an error: \", error);\r\n      }\r\n      setSuccessMessage(\"**Thank You!  I'll be in touch shortly!**\");\r\n    }\r\n  }\r\n\r\n  // JSX\r\n  return (\r\n    <section className=\"light-txt container\">\r\n      <h1>Contact me</h1>\r\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\r\n        <div class=\"form-floating mb-3\">\r\n          <label for=\"floatingInput\">Your Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"floatingInput\"\r\n            onBlur={verifyForm}\r\n            placeholder=\"First Name & Last Name\"\r\n            defaultValue={name}\r\n            name=\"name\"\r\n          />\r\n        </div>\r\n        <div class=\"form-floating mb-3\">\r\n          <label for=\"floatingInput\">Your Email address:</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"floatingInput\"\r\n            onBlur={verifyForm}\r\n            placeholder=\"Your Email\"\r\n            defaultValue={email}\r\n            name=\"email\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            name=\"message\"\r\n            onBlur={verifyForm}\r\n            id=\"floatingInput\"\r\n            placeholder=\"Don't be shy!\"\r\n            defaultValue={message}\r\n            rows=\"5\"\r\n          />\r\n\r\n          {/* only want this message to appear if the errorMessage contains an error message. We can condition this render in JSX with the following conditional statement:  */}\r\n          {errorMessage && (\r\n            <div>\r\n              <p className=\"error-text\">{errorMessage}</p>\r\n            </div>\r\n          )}\r\n          {successMessage && (\r\n            <div>\r\n              <p className=\"success-text\">{successMessage}</p>\r\n            </div>\r\n          )}\r\n\r\n          <button type=\"submit\" class=\"btn btn-primary p-2 m-2\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","export function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  var re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function validateName(name) {\r\n  let re = /^[a-zA-Z\" \".]{1,50}$/;\r\n  return re.test(String(name));\r\n}\r\n\r\nexport function validateMessage(message) {\r\n  let re = /^.{1,1000}$/;\r\n  return re.test(String(message));\r\n}\r\n","export default __webpack_public_path__ + \"static/media/LOTRSSGame.d1d8bcbe.JPG\";","export default __webpack_public_path__ + \"static/media/RecipeScreenshot_50.3f850374.jpg\";","export default __webpack_public_path__ + \"static/media/workday.21d80632.JPG\";","export default __webpack_public_path__ + \"static/media/runbuddy2.81a0b2b0.JPG\";","export default __webpack_public_path__ + \"static/media/tech-blogger.f249847d.JPG\";","export default __webpack_public_path__ + \"static/media/Team-Keeper-SS.ec286291.jpg\";","export default __webpack_public_path__ + \"static/media/Weather-Dashboard.7c0b1d3f.JPG\";","export default __webpack_public_path__ + \"static/media/Note-Taker.de8af744.JPG\";","export default __webpack_public_path__ + \"static/media/holidaychaosSS.97055946.JPG\";","import React from \"react\";\r\nimport lotrImage from \"../../assets/projects/LOTRSSGame.JPG\";\r\nimport recImage from \"../../assets/projects/RecipeScreenshot_50.jpg\";\r\nimport workdayImage from \"../../assets/projects/workday.JPG\";\r\nimport runbuddyImage from \"../../assets/projects/runbuddy2.JPG\";\r\nimport techBloggerImage from \"../../assets/projects/tech-blogger.JPG\";\r\nimport teamkeeperImage from \"../../assets/projects/Team-Keeper-SS.jpg\";\r\nimport weatherdashboardImage from \"../../assets/projects/Weather-Dashboard.JPG\";\r\nimport notetakerImage from \"../../assets/projects/Note-Taker.JPG\";\r\nimport holidayImage from \"../../assets/projects/holidaychaosSS.JPG\";\r\n\r\nfunction Portfolio() {\r\n  return (\r\n    <section className=\"my-5 background-img\">\r\n      <h1 id=\"about\">Checkout my Projects below!</h1>\r\n      <div className=\"container\">\r\n        <div className=\"card mb-3\">\r\n          <a href=\"https://mh-holiday-chaos-coordinator.herokuapp.com/\">\r\n            <img\r\n              src={holidayImage}\r\n              className=\"card-img-top img-thumbnail\"\r\n              alt=\"Screenshot of the Holiday Chaos Coordinator project\"\r\n            />\r\n          </a>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              Holiday-Chaos-Coordinator!!! This FULL MERN Stack application was\r\n              built using JavaScript, REACT, React-Router, MUI, Node.Js,\r\n              Express.Js, GraphQL, ApolloGraphQL, MongoDB, MonGoose w/JSON Web\r\n              Token authentication and deployed via Heroku.\r\n            </h5>\r\n            <p className=\"card-text\">\r\n              The holidays are fast approaching and you could use a hand in\r\n              keeping your shopping list in order. Holiday Chaos Coordinator\r\n              allows you to search the Target API to search products then save\r\n              products to various shopping lists. We hope this app fills you\r\n              with holiday cheer!\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card mb-3\">\r\n          <a href=\"https://lotr-rpg.herokuapp.com/\">\r\n            <img\r\n              src={lotrImage}\r\n              className=\"card-img-top img-thumbnail\"\r\n              alt=\"Screenshot of the Lord of the Rings Project\"\r\n            />\r\n          </a>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              LOTR Text Adventure Game. Full-Stack application Built using\r\n              MySQL2, Sequelize, Javascript, Handlebars Templating Engine,\r\n              HowlerJS w/ user Authentication incorporating Express-Sessions and\r\n              BCRYPT.\r\n            </h5>\r\n            <p className=\"card-text\">\r\n              Text-Based game that a user can sign into play where they can\r\n              create a character and go through the game in which their score is\r\n              dependant on the number of \"wise\" choices they make throughout the\r\n              game.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"card mb-3\">\r\n            <a href=\"https://mjh1985codeman.github.io/Recipe-Generator/\">\r\n              <img\r\n                src={recImage}\r\n                className=\"card-img-top img-thumbnail\"\r\n                alt=\"Screenshot of the Recipe-Generator Project\"\r\n              />\r\n            </a>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">\r\n                Recipe Generator Built using CSS, HTML and JavaScript which\r\n                incorporates getting information from a 3rd party API.\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                App that you can use to generate random recipes based on\r\n                available ingredients.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <a href=\"https://github.com/mjh1985codeman/Work-Day-Scheduler\">\r\n                  <img\r\n                    src={workdayImage}\r\n                    className=\"card-img-top img-thumbnail other-projects\"\r\n                    alt=\"screen shot of the work day scheduler application\"\r\n                  />\r\n                </a>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    Work-Day-Scheduler built using HTML, CSS and Javascript.\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    Simple Work day schedule application that is color coded\r\n                    based on the time.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <a href=\"https://mjh1985codeman.github.io/run-buddy/\">\r\n                  <img\r\n                    src={runbuddyImage}\r\n                    className=\"card-img-top img-thumbnail other-projects\"\r\n                    alt=\"screenshot of the rubuddy application\"\r\n                  />\r\n                </a>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    Run Buddy built only using HTML and CSS\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    Simple Site built w/ Media Queries for scaled viewing\r\n                    adjustments.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <a href=\"https://tech-time-blogger.herokuapp.com/\">\r\n                  <img\r\n                    src={techBloggerImage}\r\n                    className=\"card-img-top\"\r\n                    alt=\"screenshot of the tech-time-blogger application\"\r\n                  />\r\n                </a>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    Tech-Time-Blogger. Full-Stack application Built using\r\n                    MySQL2, Sequelize, Javascript, Handlebars w/ user\r\n                    Authentication incorporating Express-Sessions and BCRYPT\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    A Blog site that users can log into in order to create\r\n                    blogs, view other user blogs in addition to create, edit or\r\n                    delete their own posts in addition to commenting on other\r\n                    user blog posts.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <a href=\"https://github.com/mjh1985codeman/Team-Keeper\">\r\n                  <img\r\n                    src={teamkeeperImage}\r\n                    className=\"card-img-top\"\r\n                    alt=\"screenshot of the team-keeper application\"\r\n                  />\r\n                </a>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    Team-Keeper. Built using MySQL and Javascript, powered by\r\n                    NodeJS.\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    With this node js command prompt application a user is able\r\n                    to answer specic questions about their team which once\r\n                    complete auto-generates a styled HTML sheet w/ their team\r\n                    members data.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <a href=\"https://mjh1985codeman.github.io/Weather-Dashboard/\">\r\n                  <img\r\n                    src={weatherdashboardImage}\r\n                    className=\"card-img-top\"\r\n                    alt=\"screenshot of the weather-dashboard application\"\r\n                  />\r\n                </a>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    Weather Dashboard Application. Built using HTML, CSS and\r\n                    JavaScript along with getting information from a 3rd party\r\n                    API and storing recent searches in local storage for easy\r\n                    retrieval.\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    A site where users are able to enter a city name to get the\r\n                    current weather conditions and next 5 day forecast for that\r\n                    specific city.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <a href=\"https://note-taker-85.herokuapp.com/notes\">\r\n                  <img\r\n                    src={notetakerImage}\r\n                    className=\"card-img-top\"\r\n                    alt=\"screenshot of the note-taker application\"\r\n                  />\r\n                </a>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    Simple Full-Stack application built w/ SQL, HTML, CSS and\r\n                    JavaScript.\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    An application where users are able to Create, Read, Update\r\n                    and Delete Notes.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","export default __webpack_public_path__ + \"static/media/MHResume.b8e68b86.docx\";","import React from \"react\";\r\nimport mhResume from \"../../assets/resume/MHResume.docx\";\r\n\r\nfunction Resume() {\r\n  return (\r\n    <div className=\"container\">\r\n      <section className=\"my-5 background-img \">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h1 id=\"about\">Click the button to download my resume!</h1>\r\n        </div>\r\n        <div className=\"d-flex justify-content-around \">\r\n          <a href={mhResume} download=\"MHResume\">\r\n            <button className=\"resume-btn p-2\" type=\"button\">\r\n              RESUME\r\n            </button>\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resume;\r\n","import React, { useState } from \"react\";\r\nimport NavTabs from \"./NavTabs\";\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Portfolio from \"./pages/Portfolio\";\r\nimport Resume from \"./pages/Resume\";\r\n\r\nfunction PortfolioCont() {\r\n  // Using useState, set the default value for currentPage to 'Home'\r\n  const [currentPage, handlePageChange] = useState(\"About\");\r\n\r\n  // The renderPage method uses a switch statement to render the appropriate current page\r\n  const renderPage = () => {\r\n    switch (currentPage) {\r\n      case \"About\":\r\n        return <About />;\r\n      case \"Portfolio\":\r\n        return <Portfolio />;\r\n      case \"Contact\":\r\n        return <Contact />;\r\n      case \"Resume\":\r\n        return <Resume />;\r\n      default:\r\n        return <About />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Pass the state value and the setter as props to NavTabs */}\r\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\r\n      {/* Call the renderPage function passing in the currentPage */}\r\n      <div>{renderPage(currentPage)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioCont;\r\n","import React from \"react\";\r\n\r\n// Props are passed through our functional component.\r\nfunction Footer() {\r\n  return (\r\n    <footer class=\"d-flex justify-content-center\">\r\n      <a\r\n        class=\"bg-secondary text-light m-2\"\r\n        href=\"https://github.com/mjh1985codeman\"\r\n      >\r\n        <i class=\"fab fa-github-square fa-3x\"></i>\r\n      </a>\r\n\r\n      <a\r\n        class=\"bg-secondary text-light m-2\"\r\n        href=\"https://www.linkedin.com/in/michael-hodges-937225ba/\"\r\n      >\r\n        <i class=\"fab fa-linkedin fa-3x\"></i>\r\n      </a>\r\n      <a\r\n        class=\"bg-secondary text-light m-2\"\r\n        href=\"mailto:michael.hodges1985@yahoo.com\"\r\n      >\r\n        <i class=\"fas fa-envelope-square fa-3x\"></i>\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport PortfolioContainer from \"./components/PortfolioContainer\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => (\n  <div>\n    <header className=\"header-img light-txt\">\n      <h1 class=\"py-2 px-3\">Michael J Hodges</h1>\n    </header>\n    <PortfolioContainer />\n    <Footer />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}